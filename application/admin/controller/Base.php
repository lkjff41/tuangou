<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/12/25
 * Time: 12:35
 */
namespace app\admin\controller;
use think\Controller;

class Base extends Controller{
    public function _initialize()
    {
        $this->isLogin();

        $sessionuser = session('user','','admin');

        $this->hasP($sessionuser);

        $meuns = $this->getMeun($sessionuser['id']);

        $this->assign('menu',$meuns);
        $this->assign('user',$sessionuser);
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    public function isLogin(){
        if (!session('user','','admin')){
            $this->error('请登录','login/index');
        }
    }
    public function hasP($session){
        if (strtolower(request()->controller()) == 'index'){
            return TRUE;
        }
//        if (strtolower(request()->action()) == 'edit'){
//            return TRUE;
//        }
        $has = model('permission')->checkP($session);
        if (!$has){
            $this->error('无权访问','index/index');

        }
    }



    public function status()
    {
        $data = input();
        //if is_main 不等于1 都失败
//        if (session('user')['is_main']!=1){
//            $this->error('你没有权限');
//        }
        if (empty($data['id'])){
            $this->error('id不合法');
        }
        if (!is_numeric($data['status'])){
            $this->error('status不合法');
        }
        $model = request()->controller();
        $del = model($model)->where('id', $data['id'])->update(['update_time'=>time(),'status'=>$data['status']]);
        if ($del){
            $this->success('操作成功');
        }else{
            $this->error('操作失败');
        }
    }

    //获取菜单 转二维数组
    public function getMeun($user_id){
        $has = model('userRole')->alias('a')
            ->join('rolePermission b','a.role_id=b.role_id')
            ->join('permission c','c.id=b.permission_id')
            ->where([
                'a.user_id'=>$user_id,
            ])->select();
        $allmenu = model('permission')->getmenutree($has->toArray());
        static $meun = [];
        static $meuns = [];
        foreach ($allmenu as $k=>$v){
            if ($v['pid']===0){
                $meun[] = $v;
            }
        }
        foreach ($meun as $k=>$v){
            foreach ($allmenu as $k1=>$v1){
                if ($v1['pid']==$v['id']){
                    $v1['url'] = $v1['controller'].'/'.$v1['action'];
                    $meuns[$v['name']][]=$v1;
                }
            }
        }
//        var_dump($meuns);die;
        return $meuns;
    }

    //ajax排序
    public function sort($id,$sort){
        $model = request()->controller();
        $up = model($model)->where('id',$id)->update(['sort'=>$sort]);
        if ($up){
            //获取上一个页面的url
            $this->result($_SERVER['HTTP_REFERER'],1,'success');
        }else{
            $this->result($_SERVER['HTTP_REFERER'],0,'更新失败');
        }
    }
}